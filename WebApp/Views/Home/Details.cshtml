@model WebApp.Models.ViewModels.DetailsVM
@using WebApp.Extensions

<div class="container">
    <div class="row">
        <!-- Sekcja produktu -->
        <div class="col-md-9">
            <form method="post" asp-controller="Home" asp-action="DetailsPost">
                <div class="product-section">
                    <div class="backgroundWhite pt-4">
                        <div class="details" style="border:1px solid #000000;">
                            <div class="details-header bg-dark text-light d-flex align-items-center justify-content-between" style="border-radius: 0px; padding-right: 10px; padding-left: 10px;">
                                <div class="col-12 col-md-8">
                                    <h2 class="text-white">@Model.Product.Name</h2>
                                    <h5 class="text-info">Offer ID: @Model.Product.Id</h5>
                                </div>
                                <div class="col-12 col-md-3 text-end">
                                    @if (Model.ExistsInBookmarks)
                                    {
                                        <a asp-action="RemoveFromBookmarked" asp-route-id="@Model.Product.Id" class="btn btn-warning btn-square form-control btn-lg" style="height:50px;">
                                            <i class="fas fa-bookmark"></i> Remove
                                        </a>
                                    }
                                    else
                                    {
                                        <button type="submit" asp-route-id="@Model.Product.Id" class="btn btn-info form-control btn-lg" style="height:50px;">
                                            <i class="far fa-bookmark"></i> Add to Bookmarks
                                        </button>
                                    }
                                </div>
                            </div>


                            <div class="details-body">
                                <div class="rounded p-2">
                                    <div class="row">
                                        <div class="col-12 col-lg-8">
                                            @if (Model.Product.Images.Any())
                                            {
                                                <div id="productCarousel-@Model.Product.Id" class="carousel slide mb-3" data-bs-ride="carousel">
                                                    <div class="carousel-inner">
                                                        @for (int i = 0; i < Model.Product.Images.Count; i++)
                                                        {
                                                            var image = Model.Product.Images.ElementAt(i);
                                                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                                                <img class="d-block w-100 img-fluid uniform-img @(Model.Product.Status == WebApp.Models.Product.ItemStatus.Reserved ? "reserved-img" : "")"
                                                                     src="~/images/products/@image.ImageUrl" alt="Product image" />
                                                            </div>
                                                        }
                                                    </div>
                                                    <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel-@Model.Product.Id" data-bs-slide="prev">
                                                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                                        <span class="visually-hidden">Previous</span>
                                                    </button>
                                                    <button class="carousel-control-next" type="button" data-bs-target="#productCarousel-@Model.Product.Id" data-bs-slide="next">
                                                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                                        <span class="visually-hidden">Next</span>
                                                    </button>
                                                </div>
                                            }
                                            else
                                            {
                                                <img class="card-img-top img-fluid mb-3 uniform-img @(Model.Product.Status == WebApp.Models.Product.ItemStatus.Reserved ? "reserved-img" : "")"
                                                     src="~/images/products/default-image.png" alt="No image available" />
                                            }

                                            @if (Model.Product.Status == WebApp.Models.Product.ItemStatus.Reserved)
                                            {
                                                <div class="status-overlay">Reserved</div>
                                            }
                                            
                                        </div>
                                        <div class="col-12 col-lg-4">
                                            <div>
                                                <div class="mb-2">
                                                    <div class="info"><strong>Category:</strong> @Model.Product.Category.Name</div>
                                                    <div class="info"><strong>Listings Type:</strong> @Model.Product.ListingsType.Name</div>
                                                    <div class="info"><strong>Price:</strong> @Model.Product.Price.ToString("C")</div>                                                    
                                                    <div class="info"><strong>City:</strong> @Model.Product.City</div>
                                                    @if (Model.Product.ListingsType.Name == "For Sale")
                                                    {
                                                        <div class="info"><strong>Price per Square Meter:</strong> @(Model.Product.SquareMeters.HasValue && Model.Product.SquareMeters.Value > 0 ? (Model.Product.Price / Model.Product.SquareMeters.Value).ToString("C") : "N/A")</div>
                                                        <div class="info"><strong>Market:</strong> @Model.Product.Market.GetDisplayName()</div>
                                                    }  
                                                    <div class="info"><strong>Square Meters:</strong> @Model.Product.SquareMeters m²</div>
                                                    <div class="info"><strong>Building Type:</strong> @Model.Product.Building.GetDisplayName()</div>
                                                    <div class="info"><strong>Last Updated:</strong> @Model.Product.DateAdded.ToString("yyyy-MM-dd")</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <p class="text-secondary">@Html.Raw(Model.Product.Description)</p>
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div id="map" class="col-12 d-flex justify-content-start" style="height: 500px;"></div>
                            </div>

                            @if (Model.Product.ListingsType.Name == "For Sale"){
                            <div class="row mt-3">
                                <div class="col-12 d-flex justify-content-end">
                                    <a asp-action="MortgagePayment" asp-controller="Home" asp-route-id="@Model.Product.Id" class="btn btn-info btn-lg" style="height:40px;margin-bottom:10px; padding:5px;">Calculating a mortgage payment</a>
                                </div>
                            </div>
                            }
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <!-- Sekcja formularza -->
        <div class="col-md-3">
            <div class="form-section">
                <div class="backgroundWhite pt-4">
                    <div class="card" style="border:1px solid #000000;">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <i class="fa-solid fa-phone" style="margin-right:10px;"></i>
                                <span>Phone number</span>
                            </div>

                            <form method="post" asp-controller="Home" asp-action="CreateMessage">
                                @Html.AntiForgeryToken()
                                <div class="form-group">
                                    <label class="control-label">Name</label>
                                    <input asp-for="Message.Name" class="form-control" placeholder="First Name*" required />
                                    <span asp-validation-for="Message.Name" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label class="control-label">Email</label>
                                    <input asp-for="Message.Email" class="form-control" placeholder="Email*" required />
                                    <span asp-validation-for="Message.Email" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label class="control-label">Phone</label>
                                    <input asp-for="Message.Phone" class="form-control" placeholder="Phone Number" oninput="this.value = this.value.replace(/[^0-9+]/g, '');" />
                                    <span asp-validation-for="Message.Phone" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label class="control-label">Messages</label>
                                    <textarea asp-for="Message.Messages" class="form-control" rows="5" placeholder="Enter your message..."
                                              style="resize: none;"></textarea>
                                    <span asp-validation-for="Message.Messages" class="text-danger"></span>
                                </div>

                                <button type="submit" class="sms btn btn-primary">Send Message</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var cityName = "@Model.Product.City";

        var map = L.map('map').setView([0, 0], 13); // Ustawia początkowy widok mapy na współrzędne [0, 0] i poziom powiększenia 13

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Funkcja do geokodowania nazwy miasta
        function geocodeCity(cityName) {
            var geocodeUrl = `https://nominatim.openstreetmap.org/search?city=${encodeURIComponent(cityName)}&format=json&limit=1`;

            fetch(geocodeUrl)
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        var city = data[0];
                        var lat = city.lat;
                        var lon = city.lon;
                        var displayName = city.display_name;

                        map.setView([lat, lon], 13);

                        // Dodanie markera z popupem
                        var marker = L.marker([lat, lon]).addTo(map);
                        marker.bindPopup(`<strong>City:</strong> ${displayName}`).openPopup();
                    } else {
                        console.error("City not found");
                    }
                })
                .catch(error => console.error("Error fetching city data:", error));
        }

        geocodeCity(cityName);
    });
</script>


<style>
    .containerInDetails {
        display: grid;
        grid-template-columns: 3fr 1fr;
        gap: 20px; 
        margin: 0;
    }

    .product-section, .form-section {
        background-color: #fff; 
    }

    .backgroundWhite {
        background-color: #fff; 
    }

    .card {
        border: 1px solid #000000;
        border-radius: 0;
    }

    .form-group label {
        margin-top: 10px;
        margin-bottom: 5px;
        display: block;
    }

    .sms {
        margin-top: 10px;
    }
      
    .card-body {
        padding: 1.5rem;
    }

    .card-footer {
        padding: 1rem;
    }

    .col-12 .p-3 {
        display: flex;
        flex-direction: column;
    }

        .col-12 .p-3 > div {
            margin-bottom: 10px; 
        }

        .col-12 .p-3 div > div {
            margin-bottom: 5px; 
        }

    .uniform-img {
        width: 100%;
        height: 400px;
        object-fit: cover;
    }
   .info{
       margin-bottom:10px;
   }
</style>

    
